name: terraform test

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: 'Checkout from git'
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          
      - name: Terraform init
        id: init
        run: terraform init -input=false

      - name: Terraform plan
        if: steps.init.outcome == 'success'
        id: plan-dev
        run: terraform plan -input=false -no-color

      - name: Terraform apply
        if: steps.plan-dev.outcome == 'success'
        id: apply-dev
        run: terraform apply -input=false -no-color -auto-approve
                
      - name: Terraform destroy
        if: steps.apply-dev.outcome == 'success'
        id: destroy
        run: terraform destroy -input=false -no-color -auto-approve

  deploy-prod:
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: 'Checkout from git'
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          
      - name: Terraform init
        id: init-prod
        run: terraform init -input=false
       
      - name: Terraform plan Prod
        if: steps.init-prod.outcome == 'success'
        id: plan-prod
        run: terraform plan -input=false -no-color

      - name: Terraform apply
        if: steps.plan-prod.outcome == 'success'
        id: apply-prod
        run: terraform apply -input=false -no-color -auto-approve
          
      - name: Terraform destroy
        if: steps.apply-prod.outcome == 'success'
        id: destroy
        run: terraform destroy -input=false -no-color -auto-approve        